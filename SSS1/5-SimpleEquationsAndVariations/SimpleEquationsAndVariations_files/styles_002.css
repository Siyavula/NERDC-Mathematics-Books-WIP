@-webkit-keyframes animation--fade-in {
  from {
    -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";
    opacity: 0; }
  to {
    -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=100)";
    opacity: 1; } }

@-o-keyframes animation--fade-in {
  from {
    -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";
    opacity: 0; }
  to {
    -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=100)";
    opacity: 1; } }

@keyframes animation--fade-in {
  from {
    -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";
    opacity: 0; }
  to {
    -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=100)";
    opacity: 1; } }

@-webkit-keyframes spin {
  from {
    -webkit-transform: rotate(0deg);
            transform: rotate(0deg); }
  to {
    -webkit-transform: rotate(360deg);
            transform: rotate(360deg); } }

@-o-keyframes spin {
  from {
    -o-transform: rotate(0deg);
       transform: rotate(0deg); }
  to {
    -o-transform: rotate(360deg);
       transform: rotate(360deg); } }

@keyframes spin {
  from {
    -webkit-transform: rotate(0deg);
         -o-transform: rotate(0deg);
            transform: rotate(0deg); }
  to {
    -webkit-transform: rotate(360deg);
         -o-transform: rotate(360deg);
            transform: rotate(360deg); } }

/* 
* @preserve brand-colors 1.2.1
* http://reimertz.github.io/brand-colors
* (c) 2014 Pierre Reimertz
* may be freely distributed under the MIT license.
*/
.react-tabs {
  -webkit-tap-highlight-color: transparent; }
  .react-tabs__tab-list {
    border-bottom: 1px solid #aaa;
    margin: 0 0 10px;
    padding: 0; }
  .react-tabs__tab {
    display: inline-block;
    border: 1px solid transparent;
    border-bottom: none;
    bottom: -1px;
    position: relative;
    list-style: none;
    padding: 6px 12px;
    cursor: pointer; }
    .react-tabs__tab--selected {
      background: #fff;
      border-color: #aaa;
      color: black;
      -webkit-border-radius: 5px 5px 0 0;
              border-radius: 5px 5px 0 0; }
    .react-tabs__tab--disabled {
      color: GrayText;
      cursor: default; }
    .react-tabs__tab:focus {
      -webkit-box-shadow: 0 0 5px #0188fe;
              box-shadow: 0 0 5px #0188fe;
      border-color: #0188fe;
      outline: none; }
      .react-tabs__tab:focus:after {
        content: "";
        position: absolute;
        height: 5px;
        left: -4px;
        right: -4px;
        bottom: -5px;
        background: #fff; }
  .react-tabs__tab-panel {
    display: none; }
    .react-tabs__tab-panel--selected {
      display: block; }

/*====================FUNCTIONS========================*/
/**
* Provides a built in, editable list for syntactic sugaring of z-indices.
* The current list for Siyavula contains 'tertiary', 'secondary', 'primary' and 'over9000',
* with each successive entry having a higher z-index than the previous one.
*
* @author Sara Soueidan
*
* @example
* $list: tertiary, secondary, primary;
* .foo{ z-index: order(primary)} //returns 3
*
* @return {Number} The resultant z-index
*
* @param {String} $position - Which position in the list to use
*/
/**
* Converts one amount of a typographic unit into the equivalent amount in another unit
*
* @author Byron V. Houwens
*
* @example
* .foo{ font-size: convert( 16, px, percent ); }
* //will return
* .foo{ font-size: 100%; }
*
* @param {Number} $value - The value to convert
* @param {String} $curr-unit - The unit to convert from. Support for px, ems, pts and percent
* @param {String} $conv-unit - The unit to convert to. Support is the same, sans pts
*
* @return {*} The converted typographic unit
*/
/*=================Math functions====================*/
/**
* Shortcut function. Will return the percentage of a total number in pixels.
*
* @author Byron V. Houwens
*
* @example
* height: percentage-of(50, 60); // will return 30px
*
* @return {Number} The percentage of the total value given
*
* @param {Number} $percentage - How much of a percent to return
* @param {Number} $total - The total to find a percentage from
*/
/*======================MIXINS==========================*/
/**
* Provides a placeholder-type mixin for attention on elements
*
* @author Unknown
*
* @content [The effects to be displayed when the user interacts with the element in some way.]
*
*/
/**
* Centres an absolute or fixed position element horizontally and responsively
*
* @author Byron V. Houwens
*
* @param {Number} $width (100%) - The width of the element. Necessary.
* @param {String} $position (absolute) - Either absolute or fixed positioning for the element.
*/
/**
* Prefixes things on the fly
*
* @author Hugo Giraudel
*
* @example
* $map: (border-radius: 50%);
* .foo{
*   @include prefix($map, webkit moz); // will output prefixed versions of the border-radius declaration
* }
*
* @param {Map} $map - A key-value map of the property and value you want to prefix
* @param {List} $vendors (webkit moz ms o) - The vendor browsers to prefix
*/
/**
* Shortcut mixin for declaring pseudo elements
*
* @author Unknown
*
* @param {String} $el - The pseudo element (either before or after)
* @param {Number} $width - The width of the pseudo element
* @param {Number} $height ($width) - The height of the pseudo element
*
* @content [The remaining contents of the pseudo elements]
*/
/**
* Reduces multiple spritesheet declarations to a single line. Hit the link for more info and an example.
*
* @author Byron V. Houwens
*
* @link https://medium.com/@BHouwens/responsive-spritesheets-with-sass-73d79b892725
*
* @content [Any extra content for the sprites. Background-sizing will be necessary here]
*
* @param {String} $class - The name of the class to output. Will be suffixed with the number of the image and must be in quotes
* @param {Number} $num - The total number of images in the spritesheet
* @param {String} $path - The path to the spritesheet
*/
/**
 * SVG/PNG Fallback
 *
 * @param {String} $name
 * @param {String} $extension
 * @param {String} $color
 * @param {String} $position
 * @param {String} $repeat
 */
/*=================PLACEHOLDERS=================*/
/**
* Centres an element
*
* @author Byron V. Houwens
*
*/
/**
* Shortcut for the clearfix hack
*
* @author Unknown
*
*/
/**
* Lets an element fill the width of the screen
*
* @author Byron V. Houwens
*
*/
/**
* Very basic pseudo element starter-kit
*
* @author Unknown
*
*/
/**
* Specific styling for Siyavula buttons
*
* @author Byron V. Houwens
*
*/
/**
* Specific styling for Siyavula's navigation links
*
* @author Byron V. Houwens
*
*/
/**
* Shared property:values for Siyavula hamburger-related icons
*
* @author Byron V. Houwens
*
*/
/**
* Siyavula gradient
*
* @author Byron V. Houwens
*
*/
/**
 * Overrides Typography.scss in frontend-components for more spacing between
 * block-level elements.
 */
/* 
* @preserve brand-colors 1.2.1
* http://reimertz.github.io/brand-colors
* (c) 2014 Pierre Reimertz
* may be freely distributed under the MIT license.
*/
.react-tabs {
  -webkit-tap-highlight-color: transparent; }
  .react-tabs__tab-list {
    border-bottom: 1px solid #aaa;
    margin: 0 0 10px;
    padding: 0; }
  .react-tabs__tab {
    display: inline-block;
    border: 1px solid transparent;
    border-bottom: none;
    bottom: -1px;
    position: relative;
    list-style: none;
    padding: 6px 12px;
    cursor: pointer; }
    .react-tabs__tab--selected {
      background: #fff;
      border-color: #aaa;
      color: black;
      -webkit-border-radius: 5px 5px 0 0;
              border-radius: 5px 5px 0 0; }
    .react-tabs__tab--disabled {
      color: GrayText;
      cursor: default; }
    .react-tabs__tab:focus {
      -webkit-box-shadow: 0 0 5px #0188fe;
              box-shadow: 0 0 5px #0188fe;
      border-color: #0188fe;
      outline: none; }
      .react-tabs__tab:focus:after {
        content: "";
        position: absolute;
        height: 5px;
        left: -4px;
        right: -4px;
        bottom: -5px;
        background: #fff; }
  .react-tabs__tab-panel {
    display: none; }
    .react-tabs__tab-panel--selected {
      display: block; }

/*====================FUNCTIONS========================*/
/**
* Provides a built in, editable list for syntactic sugaring of z-indices.
* The current list for Siyavula contains 'tertiary', 'secondary', 'primary' and 'over9000',
* with each successive entry having a higher z-index than the previous one.
*
* @author Sara Soueidan
*
* @example
* $list: tertiary, secondary, primary;
* .foo{ z-index: order(primary)} //returns 3
*
* @return {Number} The resultant z-index
*
* @param {String} $position - Which position in the list to use
*/
/**
* Converts one amount of a typographic unit into the equivalent amount in another unit
*
* @author Byron V. Houwens
*
* @example
* .foo{ font-size: convert( 16, px, percent ); }
* //will return
* .foo{ font-size: 100%; }
*
* @param {Number} $value - The value to convert
* @param {String} $curr-unit - The unit to convert from. Support for px, ems, pts and percent
* @param {String} $conv-unit - The unit to convert to. Support is the same, sans pts
*
* @return {*} The converted typographic unit
*/
/*=================Math functions====================*/
/**
* Shortcut function. Will return the percentage of a total number in pixels.
*
* @author Byron V. Houwens
*
* @example
* height: percentage-of(50, 60); // will return 30px
*
* @return {Number} The percentage of the total value given
*
* @param {Number} $percentage - How much of a percent to return
* @param {Number} $total - The total to find a percentage from
*/
/*======================MIXINS==========================*/
/**
* Provides a placeholder-type mixin for attention on elements
*
* @author Unknown
*
* @content [The effects to be displayed when the user interacts with the element in some way.]
*
*/
/**
* Centres an absolute or fixed position element horizontally and responsively
*
* @author Byron V. Houwens
*
* @param {Number} $width (100%) - The width of the element. Necessary.
* @param {String} $position (absolute) - Either absolute or fixed positioning for the element.
*/
/**
* Prefixes things on the fly
*
* @author Hugo Giraudel
*
* @example
* $map: (border-radius: 50%);
* .foo{
*   @include prefix($map, webkit moz); // will output prefixed versions of the border-radius declaration
* }
*
* @param {Map} $map - A key-value map of the property and value you want to prefix
* @param {List} $vendors (webkit moz ms o) - The vendor browsers to prefix
*/
/**
* Shortcut mixin for declaring pseudo elements
*
* @author Unknown
*
* @param {String} $el - The pseudo element (either before or after)
* @param {Number} $width - The width of the pseudo element
* @param {Number} $height ($width) - The height of the pseudo element
*
* @content [The remaining contents of the pseudo elements]
*/
/**
* Reduces multiple spritesheet declarations to a single line. Hit the link for more info and an example.
*
* @author Byron V. Houwens
*
* @link https://medium.com/@BHouwens/responsive-spritesheets-with-sass-73d79b892725
*
* @content [Any extra content for the sprites. Background-sizing will be necessary here]
*
* @param {String} $class - The name of the class to output. Will be suffixed with the number of the image and must be in quotes
* @param {Number} $num - The total number of images in the spritesheet
* @param {String} $path - The path to the spritesheet
*/
/**
 * SVG/PNG Fallback
 *
 * @param {String} $name
 * @param {String} $extension
 * @param {String} $color
 * @param {String} $position
 * @param {String} $repeat
 */
/*=================PLACEHOLDERS=================*/
/**
* Centres an element
*
* @author Byron V. Houwens
*
*/
/**
* Shortcut for the clearfix hack
*
* @author Unknown
*
*/
/**
* Lets an element fill the width of the screen
*
* @author Byron V. Houwens
*
*/
/**
* Very basic pseudo element starter-kit
*
* @author Unknown
*
*/
/**
* Specific styling for Siyavula buttons
*
* @author Byron V. Houwens
*
*/
/**
* Specific styling for Siyavula's navigation links
*
* @author Byron V. Houwens
*
*/
/**
* Shared property:values for Siyavula hamburger-related icons
*
* @author Byron V. Houwens
*
*/
/**
* Siyavula gradient
*
* @author Byron V. Houwens
*
*/
/**
 * Overrides Typography.scss in frontend-components for more spacing between
 * block-level elements.
 */
.sv .sv-goal-chart-holder {
  margin: 0 auto;
  padding: 0.75em 0 0; }
  .sv .sv-goal-chart-holder__lead {
    margin: 0 auto 1.5em;
    text-align: center; }
  .sv .sv-goal-chart-holder__figure {
    text-align: center; }

.sv .sv-goal-chart-placeholder {
  margin: 0 auto;
  padding: 0; }
  .sv .sv-goal-chart-placeholder__title {
    font-weight: bold;
    margin-bottom: .75em; }
  .sv .sv-goal-chart-placeholder__figure {
    margin-bottom: .75em; }
    .sv .sv-goal-chart-placeholder__figure .icon {
      font-size: 4em;
      color: #b4b4b4; }
  .sv .sv-goal-chart-placeholder__lead p:last-child {
    margin-bottom: 0; }

/* 
* @preserve brand-colors 1.2.1
* http://reimertz.github.io/brand-colors
* (c) 2014 Pierre Reimertz
* may be freely distributed under the MIT license.
*/
.react-tabs {
  -webkit-tap-highlight-color: transparent; }
  .react-tabs__tab-list {
    border-bottom: 1px solid #aaa;
    margin: 0 0 10px;
    padding: 0; }
  .react-tabs__tab {
    display: inline-block;
    border: 1px solid transparent;
    border-bottom: none;
    bottom: -1px;
    position: relative;
    list-style: none;
    padding: 6px 12px;
    cursor: pointer; }
    .react-tabs__tab--selected {
      background: #fff;
      border-color: #aaa;
      color: black;
      -webkit-border-radius: 5px 5px 0 0;
              border-radius: 5px 5px 0 0; }
    .react-tabs__tab--disabled {
      color: GrayText;
      cursor: default; }
    .react-tabs__tab:focus {
      -webkit-box-shadow: 0 0 5px #0188fe;
              box-shadow: 0 0 5px #0188fe;
      border-color: #0188fe;
      outline: none; }
      .react-tabs__tab:focus:after {
        content: "";
        position: absolute;
        height: 5px;
        left: -4px;
        right: -4px;
        bottom: -5px;
        background: #fff; }
  .react-tabs__tab-panel {
    display: none; }
    .react-tabs__tab-panel--selected {
      display: block; }

/*====================FUNCTIONS========================*/
/**
* Provides a built in, editable list for syntactic sugaring of z-indices.
* The current list for Siyavula contains 'tertiary', 'secondary', 'primary' and 'over9000',
* with each successive entry having a higher z-index than the previous one.
*
* @author Sara Soueidan
*
* @example
* $list: tertiary, secondary, primary;
* .foo{ z-index: order(primary)} //returns 3
*
* @return {Number} The resultant z-index
*
* @param {String} $position - Which position in the list to use
*/
/**
* Converts one amount of a typographic unit into the equivalent amount in another unit
*
* @author Byron V. Houwens
*
* @example
* .foo{ font-size: convert( 16, px, percent ); }
* //will return
* .foo{ font-size: 100%; }
*
* @param {Number} $value - The value to convert
* @param {String} $curr-unit - The unit to convert from. Support for px, ems, pts and percent
* @param {String} $conv-unit - The unit to convert to. Support is the same, sans pts
*
* @return {*} The converted typographic unit
*/
/*=================Math functions====================*/
/**
* Shortcut function. Will return the percentage of a total number in pixels.
*
* @author Byron V. Houwens
*
* @example
* height: percentage-of(50, 60); // will return 30px
*
* @return {Number} The percentage of the total value given
*
* @param {Number} $percentage - How much of a percent to return
* @param {Number} $total - The total to find a percentage from
*/
/*======================MIXINS==========================*/
/**
* Provides a placeholder-type mixin for attention on elements
*
* @author Unknown
*
* @content [The effects to be displayed when the user interacts with the element in some way.]
*
*/
/**
* Centres an absolute or fixed position element horizontally and responsively
*
* @author Byron V. Houwens
*
* @param {Number} $width (100%) - The width of the element. Necessary.
* @param {String} $position (absolute) - Either absolute or fixed positioning for the element.
*/
/**
* Prefixes things on the fly
*
* @author Hugo Giraudel
*
* @example
* $map: (border-radius: 50%);
* .foo{
*   @include prefix($map, webkit moz); // will output prefixed versions of the border-radius declaration
* }
*
* @param {Map} $map - A key-value map of the property and value you want to prefix
* @param {List} $vendors (webkit moz ms o) - The vendor browsers to prefix
*/
/**
* Shortcut mixin for declaring pseudo elements
*
* @author Unknown
*
* @param {String} $el - The pseudo element (either before or after)
* @param {Number} $width - The width of the pseudo element
* @param {Number} $height ($width) - The height of the pseudo element
*
* @content [The remaining contents of the pseudo elements]
*/
/**
* Reduces multiple spritesheet declarations to a single line. Hit the link for more info and an example.
*
* @author Byron V. Houwens
*
* @link https://medium.com/@BHouwens/responsive-spritesheets-with-sass-73d79b892725
*
* @content [Any extra content for the sprites. Background-sizing will be necessary here]
*
* @param {String} $class - The name of the class to output. Will be suffixed with the number of the image and must be in quotes
* @param {Number} $num - The total number of images in the spritesheet
* @param {String} $path - The path to the spritesheet
*/
/**
 * SVG/PNG Fallback
 *
 * @param {String} $name
 * @param {String} $extension
 * @param {String} $color
 * @param {String} $position
 * @param {String} $repeat
 */
/*=================PLACEHOLDERS=================*/
/**
* Centres an element
*
* @author Byron V. Houwens
*
*/
/**
* Shortcut for the clearfix hack
*
* @author Unknown
*
*/
/**
* Lets an element fill the width of the screen
*
* @author Byron V. Houwens
*
*/
/**
* Very basic pseudo element starter-kit
*
* @author Unknown
*
*/
/**
* Specific styling for Siyavula buttons
*
* @author Byron V. Houwens
*
*/
/**
* Specific styling for Siyavula's navigation links
*
* @author Byron V. Houwens
*
*/
/**
* Shared property:values for Siyavula hamburger-related icons
*
* @author Byron V. Houwens
*
*/
/**
* Siyavula gradient
*
* @author Byron V. Houwens
*
*/
/**
 * Overrides Typography.scss in frontend-components for more spacing between
 * block-level elements.
 */
.sv .sv-motivation-placeholder {
  margin: 0 auto; }
  .sv .sv-motivation-placeholder__title {
    font-weight: bold;
    margin-bottom: .75em; }
  .sv .sv-motivation-placeholder__figure {
    margin-bottom: .75em; }
    .sv .sv-motivation-placeholder__figure .icon {
      font-size: 4em;
      color: #75b1cc; }
  .sv .sv-motivation-placeholder__lead p:last-child {
    margin-bottom: 0; }

/* 
* @preserve brand-colors 1.2.1
* http://reimertz.github.io/brand-colors
* (c) 2014 Pierre Reimertz
* may be freely distributed under the MIT license.
*/
.react-tabs {
  -webkit-tap-highlight-color: transparent; }
  .react-tabs__tab-list {
    border-bottom: 1px solid #aaa;
    margin: 0 0 10px;
    padding: 0; }
  .react-tabs__tab {
    display: inline-block;
    border: 1px solid transparent;
    border-bottom: none;
    bottom: -1px;
    position: relative;
    list-style: none;
    padding: 6px 12px;
    cursor: pointer; }
    .react-tabs__tab--selected {
      background: #fff;
      border-color: #aaa;
      color: black;
      -webkit-border-radius: 5px 5px 0 0;
              border-radius: 5px 5px 0 0; }
    .react-tabs__tab--disabled {
      color: GrayText;
      cursor: default; }
    .react-tabs__tab:focus {
      -webkit-box-shadow: 0 0 5px #0188fe;
              box-shadow: 0 0 5px #0188fe;
      border-color: #0188fe;
      outline: none; }
      .react-tabs__tab:focus:after {
        content: "";
        position: absolute;
        height: 5px;
        left: -4px;
        right: -4px;
        bottom: -5px;
        background: #fff; }
  .react-tabs__tab-panel {
    display: none; }
    .react-tabs__tab-panel--selected {
      display: block; }

/*====================FUNCTIONS========================*/
/**
* Provides a built in, editable list for syntactic sugaring of z-indices.
* The current list for Siyavula contains 'tertiary', 'secondary', 'primary' and 'over9000',
* with each successive entry having a higher z-index than the previous one.
*
* @author Sara Soueidan
*
* @example
* $list: tertiary, secondary, primary;
* .foo{ z-index: order(primary)} //returns 3
*
* @return {Number} The resultant z-index
*
* @param {String} $position - Which position in the list to use
*/
/**
* Converts one amount of a typographic unit into the equivalent amount in another unit
*
* @author Byron V. Houwens
*
* @example
* .foo{ font-size: convert( 16, px, percent ); }
* //will return
* .foo{ font-size: 100%; }
*
* @param {Number} $value - The value to convert
* @param {String} $curr-unit - The unit to convert from. Support for px, ems, pts and percent
* @param {String} $conv-unit - The unit to convert to. Support is the same, sans pts
*
* @return {*} The converted typographic unit
*/
/*=================Math functions====================*/
/**
* Shortcut function. Will return the percentage of a total number in pixels.
*
* @author Byron V. Houwens
*
* @example
* height: percentage-of(50, 60); // will return 30px
*
* @return {Number} The percentage of the total value given
*
* @param {Number} $percentage - How much of a percent to return
* @param {Number} $total - The total to find a percentage from
*/
/*======================MIXINS==========================*/
/**
* Provides a placeholder-type mixin for attention on elements
*
* @author Unknown
*
* @content [The effects to be displayed when the user interacts with the element in some way.]
*
*/
/**
* Centres an absolute or fixed position element horizontally and responsively
*
* @author Byron V. Houwens
*
* @param {Number} $width (100%) - The width of the element. Necessary.
* @param {String} $position (absolute) - Either absolute or fixed positioning for the element.
*/
/**
* Prefixes things on the fly
*
* @author Hugo Giraudel
*
* @example
* $map: (border-radius: 50%);
* .foo{
*   @include prefix($map, webkit moz); // will output prefixed versions of the border-radius declaration
* }
*
* @param {Map} $map - A key-value map of the property and value you want to prefix
* @param {List} $vendors (webkit moz ms o) - The vendor browsers to prefix
*/
/**
* Shortcut mixin for declaring pseudo elements
*
* @author Unknown
*
* @param {String} $el - The pseudo element (either before or after)
* @param {Number} $width - The width of the pseudo element
* @param {Number} $height ($width) - The height of the pseudo element
*
* @content [The remaining contents of the pseudo elements]
*/
/**
* Reduces multiple spritesheet declarations to a single line. Hit the link for more info and an example.
*
* @author Byron V. Houwens
*
* @link https://medium.com/@BHouwens/responsive-spritesheets-with-sass-73d79b892725
*
* @content [Any extra content for the sprites. Background-sizing will be necessary here]
*
* @param {String} $class - The name of the class to output. Will be suffixed with the number of the image and must be in quotes
* @param {Number} $num - The total number of images in the spritesheet
* @param {String} $path - The path to the spritesheet
*/
/**
 * SVG/PNG Fallback
 *
 * @param {String} $name
 * @param {String} $extension
 * @param {String} $color
 * @param {String} $position
 * @param {String} $repeat
 */
/*=================PLACEHOLDERS=================*/
/**
* Centres an element
*
* @author Byron V. Houwens
*
*/
/**
* Shortcut for the clearfix hack
*
* @author Unknown
*
*/
/**
* Lets an element fill the width of the screen
*
* @author Byron V. Houwens
*
*/
/**
* Very basic pseudo element starter-kit
*
* @author Unknown
*
*/
/**
* Specific styling for Siyavula buttons
*
* @author Byron V. Houwens
*
*/
/**
* Specific styling for Siyavula's navigation links
*
* @author Byron V. Houwens
*
*/
/**
* Shared property:values for Siyavula hamburger-related icons
*
* @author Byron V. Houwens
*
*/
/**
* Siyavula gradient
*
* @author Byron V. Houwens
*
*/
/**
 * Overrides Typography.scss in frontend-components for more spacing between
 * block-level elements.
 */
@font-face {
  font-family: 'Roboto';
  font-style: normal;
  font-weight: 400;
  src: local("Roboto"), local("Roboto-Regular"), url("../fonts/roboto-v15-latin/roboto-v15-latin-regular.woff2") format("woff2"), url("../fonts/roboto-v15-latin/roboto-v15-latin-regular.woff") format("woff"), url("../fonts/roboto-v15-latin/roboto-v15-latin-regular.ttf") format("truetype");
  /* Safari, Android, iOS */ }

@font-face {
  font-family: 'Roboto';
  font-style: normal;
  font-weight: 700;
  src: local("Roboto Bold"), local("Roboto-Bold"), url("../fonts/roboto-v15-latin/roboto-v15-latin-700.woff2") format("woff2"), url("../fonts/roboto-v15-latin/roboto-v15-latin-700.woff") format("woff"), url("../fonts/roboto-v15-latin/roboto-v15-latin-700.ttf") format("truetype");
  /* Safari, Android, iOS */ }

@font-face {
  font-family: 'Roboto Slab';
  font-style: normal;
  font-weight: 400;
  src: local("Roboto Slab Regular"), local("RobotoSlab-Regular"), url("../fonts/roboto-slab-v6-latin/roboto-slab-v6-latin-regular.woff2") format("woff2"), url("../fonts/roboto-slab-v6-latin/roboto-slab-v6-latin-regular.woff") format("woff"), url("../fonts/roboto-slab-v6-latin/roboto-slab-v6-latin-regular.ttf") format("truetype");
  /* Safari, Android, iOS */ }

.sv small {
  font-size: 0.8125em;
  line-height: 1.5em; }

.sv sub,
.sv sup {
  white-space: nowrap; }

/* 
* @preserve brand-colors 1.2.1
* http://reimertz.github.io/brand-colors
* (c) 2014 Pierre Reimertz
* may be freely distributed under the MIT license.
*/
.react-tabs {
  -webkit-tap-highlight-color: transparent; }
  .react-tabs__tab-list {
    border-bottom: 1px solid #aaa;
    margin: 0 0 10px;
    padding: 0; }
  .react-tabs__tab {
    display: inline-block;
    border: 1px solid transparent;
    border-bottom: none;
    bottom: -1px;
    position: relative;
    list-style: none;
    padding: 6px 12px;
    cursor: pointer; }
    .react-tabs__tab--selected {
      background: #fff;
      border-color: #aaa;
      color: black;
      -webkit-border-radius: 5px 5px 0 0;
              border-radius: 5px 5px 0 0; }
    .react-tabs__tab--disabled {
      color: GrayText;
      cursor: default; }
    .react-tabs__tab:focus {
      -webkit-box-shadow: 0 0 5px #0188fe;
              box-shadow: 0 0 5px #0188fe;
      border-color: #0188fe;
      outline: none; }
      .react-tabs__tab:focus:after {
        content: "";
        position: absolute;
        height: 5px;
        left: -4px;
        right: -4px;
        bottom: -5px;
        background: #fff; }
  .react-tabs__tab-panel {
    display: none; }
    .react-tabs__tab-panel--selected {
      display: block; }

/*====================FUNCTIONS========================*/
/**
* Provides a built in, editable list for syntactic sugaring of z-indices.
* The current list for Siyavula contains 'tertiary', 'secondary', 'primary' and 'over9000',
* with each successive entry having a higher z-index than the previous one.
*
* @author Sara Soueidan
*
* @example
* $list: tertiary, secondary, primary;
* .foo{ z-index: order(primary)} //returns 3
*
* @return {Number} The resultant z-index
*
* @param {String} $position - Which position in the list to use
*/
/**
* Converts one amount of a typographic unit into the equivalent amount in another unit
*
* @author Byron V. Houwens
*
* @example
* .foo{ font-size: convert( 16, px, percent ); }
* //will return
* .foo{ font-size: 100%; }
*
* @param {Number} $value - The value to convert
* @param {String} $curr-unit - The unit to convert from. Support for px, ems, pts and percent
* @param {String} $conv-unit - The unit to convert to. Support is the same, sans pts
*
* @return {*} The converted typographic unit
*/
/*=================Math functions====================*/
/**
* Shortcut function. Will return the percentage of a total number in pixels.
*
* @author Byron V. Houwens
*
* @example
* height: percentage-of(50, 60); // will return 30px
*
* @return {Number} The percentage of the total value given
*
* @param {Number} $percentage - How much of a percent to return
* @param {Number} $total - The total to find a percentage from
*/
/*======================MIXINS==========================*/
/**
* Provides a placeholder-type mixin for attention on elements
*
* @author Unknown
*
* @content [The effects to be displayed when the user interacts with the element in some way.]
*
*/
/**
* Centres an absolute or fixed position element horizontally and responsively
*
* @author Byron V. Houwens
*
* @param {Number} $width (100%) - The width of the element. Necessary.
* @param {String} $position (absolute) - Either absolute or fixed positioning for the element.
*/
/**
* Prefixes things on the fly
*
* @author Hugo Giraudel
*
* @example
* $map: (border-radius: 50%);
* .foo{
*   @include prefix($map, webkit moz); // will output prefixed versions of the border-radius declaration
* }
*
* @param {Map} $map - A key-value map of the property and value you want to prefix
* @param {List} $vendors (webkit moz ms o) - The vendor browsers to prefix
*/
/**
* Shortcut mixin for declaring pseudo elements
*
* @author Unknown
*
* @param {String} $el - The pseudo element (either before or after)
* @param {Number} $width - The width of the pseudo element
* @param {Number} $height ($width) - The height of the pseudo element
*
* @content [The remaining contents of the pseudo elements]
*/
/**
* Reduces multiple spritesheet declarations to a single line. Hit the link for more info and an example.
*
* @author Byron V. Houwens
*
* @link https://medium.com/@BHouwens/responsive-spritesheets-with-sass-73d79b892725
*
* @content [Any extra content for the sprites. Background-sizing will be necessary here]
*
* @param {String} $class - The name of the class to output. Will be suffixed with the number of the image and must be in quotes
* @param {Number} $num - The total number of images in the spritesheet
* @param {String} $path - The path to the spritesheet
*/
/**
 * SVG/PNG Fallback
 *
 * @param {String} $name
 * @param {String} $extension
 * @param {String} $color
 * @param {String} $position
 * @param {String} $repeat
 */
/*=================PLACEHOLDERS=================*/
/**
* Centres an element
*
* @author Byron V. Houwens
*
*/
/**
* Shortcut for the clearfix hack
*
* @author Unknown
*
*/
/**
* Lets an element fill the width of the screen
*
* @author Byron V. Houwens
*
*/
/**
* Very basic pseudo element starter-kit
*
* @author Unknown
*
*/
/**
* Specific styling for Siyavula buttons
*
* @author Byron V. Houwens
*
*/
/**
* Specific styling for Siyavula's navigation links
*
* @author Byron V. Houwens
*
*/
/**
* Shared property:values for Siyavula hamburger-related icons
*
* @author Byron V. Houwens
*
*/
/**
* Siyavula gradient
*
* @author Byron V. Houwens
*
*/
/**
 * Overrides Typography.scss in frontend-components for more spacing between
 * block-level elements.
 */
.sv .slick-prev,
.sv .slick-next {
  position: absolute;
  z-index: 10;
  display: block;
  height: 1em;
  width: 1em;
  line-height: 1;
  font-size: 1em;
  cursor: pointer;
  background: transparent;
  color: transparent;
  top: 50%;
  -webkit-transform: translate(0, -50%);
      -ms-transform: translate(0, -50%);
       -o-transform: translate(0, -50%);
          transform: translate(0, -50%);
  padding: 0;
  border: none;
  outline: none; }
  .sv .slick-prev:hover, .sv .slick-prev:focus,
  .sv .slick-next:hover,
  .sv .slick-next:focus {
    outline: none;
    background: transparent;
    color: transparent; }
    .sv .slick-prev:hover .icon, .sv .slick-prev:focus .icon,
    .sv .slick-next:hover .icon,
    .sv .slick-next:focus .icon {
      -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=100)";
      opacity: 1; }
  .sv .slick-prev.slick-disabled .icon,
  .sv .slick-next.slick-disabled .icon {
    -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=25)";
    opacity: 0.25; }
  .sv .slick-prev .icon,
  .sv .slick-next .icon {
    color: white;
    -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=75)";
    opacity: 0.75; }

.sv .slick-prev {
  left: 0; }

.sv .slick-next {
  right: 0; }

/* 
* @preserve brand-colors 1.2.1
* http://reimertz.github.io/brand-colors
* (c) 2014 Pierre Reimertz
* may be freely distributed under the MIT license.
*/
.react-tabs {
  -webkit-tap-highlight-color: transparent; }
  .react-tabs__tab-list {
    border-bottom: 1px solid #aaa;
    margin: 0 0 10px;
    padding: 0; }
  .react-tabs__tab {
    display: inline-block;
    border: 1px solid transparent;
    border-bottom: none;
    bottom: -1px;
    position: relative;
    list-style: none;
    padding: 6px 12px;
    cursor: pointer; }
    .react-tabs__tab--selected {
      background: #fff;
      border-color: #aaa;
      color: black;
      -webkit-border-radius: 5px 5px 0 0;
              border-radius: 5px 5px 0 0; }
    .react-tabs__tab--disabled {
      color: GrayText;
      cursor: default; }
    .react-tabs__tab:focus {
      -webkit-box-shadow: 0 0 5px #0188fe;
              box-shadow: 0 0 5px #0188fe;
      border-color: #0188fe;
      outline: none; }
      .react-tabs__tab:focus:after {
        content: "";
        position: absolute;
        height: 5px;
        left: -4px;
        right: -4px;
        bottom: -5px;
        background: #fff; }
  .react-tabs__tab-panel {
    display: none; }
    .react-tabs__tab-panel--selected {
      display: block; }

/*====================FUNCTIONS========================*/
/**
* Provides a built in, editable list for syntactic sugaring of z-indices.
* The current list for Siyavula contains 'tertiary', 'secondary', 'primary' and 'over9000',
* with each successive entry having a higher z-index than the previous one.
*
* @author Sara Soueidan
*
* @example
* $list: tertiary, secondary, primary;
* .foo{ z-index: order(primary)} //returns 3
*
* @return {Number} The resultant z-index
*
* @param {String} $position - Which position in the list to use
*/
/**
* Converts one amount of a typographic unit into the equivalent amount in another unit
*
* @author Byron V. Houwens
*
* @example
* .foo{ font-size: convert( 16, px, percent ); }
* //will return
* .foo{ font-size: 100%; }
*
* @param {Number} $value - The value to convert
* @param {String} $curr-unit - The unit to convert from. Support for px, ems, pts and percent
* @param {String} $conv-unit - The unit to convert to. Support is the same, sans pts
*
* @return {*} The converted typographic unit
*/
/*=================Math functions====================*/
/**
* Shortcut function. Will return the percentage of a total number in pixels.
*
* @author Byron V. Houwens
*
* @example
* height: percentage-of(50, 60); // will return 30px
*
* @return {Number} The percentage of the total value given
*
* @param {Number} $percentage - How much of a percent to return
* @param {Number} $total - The total to find a percentage from
*/
/*======================MIXINS==========================*/
/**
* Provides a placeholder-type mixin for attention on elements
*
* @author Unknown
*
* @content [The effects to be displayed when the user interacts with the element in some way.]
*
*/
/**
* Centres an absolute or fixed position element horizontally and responsively
*
* @author Byron V. Houwens
*
* @param {Number} $width (100%) - The width of the element. Necessary.
* @param {String} $position (absolute) - Either absolute or fixed positioning for the element.
*/
/**
* Prefixes things on the fly
*
* @author Hugo Giraudel
*
* @example
* $map: (border-radius: 50%);
* .foo{
*   @include prefix($map, webkit moz); // will output prefixed versions of the border-radius declaration
* }
*
* @param {Map} $map - A key-value map of the property and value you want to prefix
* @param {List} $vendors (webkit moz ms o) - The vendor browsers to prefix
*/
/**
* Shortcut mixin for declaring pseudo elements
*
* @author Unknown
*
* @param {String} $el - The pseudo element (either before or after)
* @param {Number} $width - The width of the pseudo element
* @param {Number} $height ($width) - The height of the pseudo element
*
* @content [The remaining contents of the pseudo elements]
*/
/**
* Reduces multiple spritesheet declarations to a single line. Hit the link for more info and an example.
*
* @author Byron V. Houwens
*
* @link https://medium.com/@BHouwens/responsive-spritesheets-with-sass-73d79b892725
*
* @content [Any extra content for the sprites. Background-sizing will be necessary here]
*
* @param {String} $class - The name of the class to output. Will be suffixed with the number of the image and must be in quotes
* @param {Number} $num - The total number of images in the spritesheet
* @param {String} $path - The path to the spritesheet
*/
/**
 * SVG/PNG Fallback
 *
 * @param {String} $name
 * @param {String} $extension
 * @param {String} $color
 * @param {String} $position
 * @param {String} $repeat
 */
/*=================PLACEHOLDERS=================*/
/**
* Centres an element
*
* @author Byron V. Houwens
*
*/
/**
* Shortcut for the clearfix hack
*
* @author Unknown
*
*/
/**
* Lets an element fill the width of the screen
*
* @author Byron V. Houwens
*
*/
/**
* Very basic pseudo element starter-kit
*
* @author Unknown
*
*/
/**
* Specific styling for Siyavula buttons
*
* @author Byron V. Houwens
*
*/
/**
* Specific styling for Siyavula's navigation links
*
* @author Byron V. Houwens
*
*/
/**
* Shared property:values for Siyavula hamburger-related icons
*
* @author Byron V. Houwens
*
*/
/**
* Siyavula gradient
*
* @author Byron V. Houwens
*
*/
/**
 * Overrides Typography.scss in frontend-components for more spacing between
 * block-level elements.
 */
.sv-region-main {
  display: block;
  position: relative;
  z-index: 0;
  margin: 0 auto;
  padding: 2.4em 0; }
  .sv-region-main::after {
    clear: both;
    content: "";
    display: table; }
  @media (min-width: 29em) {
    .sv-region-main {
      padding: 2.4em 0; } }
  @media (min-width: 47em) {
    .sv-region-main {
      padding: 3.6em 0; } }
  @media (min-width: 63em) {
    .sv-region-main {
      padding: 4.8em 0; } }

.sv.emas .notifications {
  -webkit-box-sizing: border-box;
     -moz-box-sizing: border-box;
          box-sizing: border-box;
  display: block;
  min-height: 0;
  margin-top: 0;
  margin-bottom: 0;
  padding-top: 0;
  padding-bottom: 0; }
  .sv.emas .notifications .sv-list-item .sv-alert {
    -webkit-border-radius: 0.25em;
            border-radius: 0.25em; }
  .sv.emas .notifications .sv-list {
    margin-top: 0;
    margin-bottom: 2.4em; }
  @media (min-width: 29em) {
    .sv.emas .notifications {
      margin-top: 0;
      margin-bottom: 0;
      padding-top: 0;
      padding-bottom: 0; }
      .sv.emas .notifications .sv-list {
        margin-top: 0;
        margin-bottom: 2.4em; } }
  @media (min-width: 47em) {
    .sv.emas .notifications {
      margin-top: 0;
      margin-bottom: 0;
      padding-top: 0;
      padding-bottom: 0; }
      .sv.emas .notifications .sv-list {
        margin-top: 0;
        margin-bottom: 3.6em; } }
  @media (min-width: 63em) {
    .sv.emas .notifications {
      margin-top: 0;
      margin-bottom: 0;
      padding-top: 0;
      padding-bottom: 0; }
      .sv.emas .notifications .sv-list {
        margin-top: 0;
        margin-bottom: 4.8em; } }

.sv.mobile .notifications {
  -webkit-box-sizing: border-box;
     -moz-box-sizing: border-box;
          box-sizing: border-box;
  display: block;
  min-height: 0;
  margin-top: 0;
  margin-bottom: 0;
  padding-top: 0;
  padding-bottom: 0; }
  .sv.mobile .notifications .sv-list-item .sv-alert {
    -webkit-border-radius: 0.25em;
            border-radius: 0.25em; }
  .sv.mobile .notifications .sv-list {
    margin-top: 0;
    margin-bottom: 2.4em; }
  @media (min-width: 29em) {
    .sv.mobile .notifications {
      margin-top: 0;
      margin-bottom: 0;
      padding-top: 0;
      padding-bottom: 0; }
      .sv.mobile .notifications .sv-list {
        margin-top: 0;
        margin-bottom: 2.4em; } }

/* 
* @preserve brand-colors 1.2.1
* http://reimertz.github.io/brand-colors
* (c) 2014 Pierre Reimertz
* may be freely distributed under the MIT license.
*/
.react-tabs {
  -webkit-tap-highlight-color: transparent; }
  .react-tabs__tab-list {
    border-bottom: 1px solid #aaa;
    margin: 0 0 10px;
    padding: 0; }
  .react-tabs__tab {
    display: inline-block;
    border: 1px solid transparent;
    border-bottom: none;
    bottom: -1px;
    position: relative;
    list-style: none;
    padding: 6px 12px;
    cursor: pointer; }
    .react-tabs__tab--selected {
      background: #fff;
      border-color: #aaa;
      color: black;
      -webkit-border-radius: 5px 5px 0 0;
              border-radius: 5px 5px 0 0; }
    .react-tabs__tab--disabled {
      color: GrayText;
      cursor: default; }
    .react-tabs__tab:focus {
      -webkit-box-shadow: 0 0 5px #0188fe;
              box-shadow: 0 0 5px #0188fe;
      border-color: #0188fe;
      outline: none; }
      .react-tabs__tab:focus:after {
        content: "";
        position: absolute;
        height: 5px;
        left: -4px;
        right: -4px;
        bottom: -5px;
        background: #fff; }
  .react-tabs__tab-panel {
    display: none; }
    .react-tabs__tab-panel--selected {
      display: block; }

/*====================FUNCTIONS========================*/
/**
* Provides a built in, editable list for syntactic sugaring of z-indices.
* The current list for Siyavula contains 'tertiary', 'secondary', 'primary' and 'over9000',
* with each successive entry having a higher z-index than the previous one.
*
* @author Sara Soueidan
*
* @example
* $list: tertiary, secondary, primary;
* .foo{ z-index: order(primary)} //returns 3
*
* @return {Number} The resultant z-index
*
* @param {String} $position - Which position in the list to use
*/
/**
* Converts one amount of a typographic unit into the equivalent amount in another unit
*
* @author Byron V. Houwens
*
* @example
* .foo{ font-size: convert( 16, px, percent ); }
* //will return
* .foo{ font-size: 100%; }
*
* @param {Number} $value - The value to convert
* @param {String} $curr-unit - The unit to convert from. Support for px, ems, pts and percent
* @param {String} $conv-unit - The unit to convert to. Support is the same, sans pts
*
* @return {*} The converted typographic unit
*/
/*=================Math functions====================*/
/**
* Shortcut function. Will return the percentage of a total number in pixels.
*
* @author Byron V. Houwens
*
* @example
* height: percentage-of(50, 60); // will return 30px
*
* @return {Number} The percentage of the total value given
*
* @param {Number} $percentage - How much of a percent to return
* @param {Number} $total - The total to find a percentage from
*/
/*======================MIXINS==========================*/
/**
* Provides a placeholder-type mixin for attention on elements
*
* @author Unknown
*
* @content [The effects to be displayed when the user interacts with the element in some way.]
*
*/
/**
* Centres an absolute or fixed position element horizontally and responsively
*
* @author Byron V. Houwens
*
* @param {Number} $width (100%) - The width of the element. Necessary.
* @param {String} $position (absolute) - Either absolute or fixed positioning for the element.
*/
/**
* Prefixes things on the fly
*
* @author Hugo Giraudel
*
* @example
* $map: (border-radius: 50%);
* .foo{
*   @include prefix($map, webkit moz); // will output prefixed versions of the border-radius declaration
* }
*
* @param {Map} $map - A key-value map of the property and value you want to prefix
* @param {List} $vendors (webkit moz ms o) - The vendor browsers to prefix
*/
/**
* Shortcut mixin for declaring pseudo elements
*
* @author Unknown
*
* @param {String} $el - The pseudo element (either before or after)
* @param {Number} $width - The width of the pseudo element
* @param {Number} $height ($width) - The height of the pseudo element
*
* @content [The remaining contents of the pseudo elements]
*/
/**
* Reduces multiple spritesheet declarations to a single line. Hit the link for more info and an example.
*
* @author Byron V. Houwens
*
* @link https://medium.com/@BHouwens/responsive-spritesheets-with-sass-73d79b892725
*
* @content [Any extra content for the sprites. Background-sizing will be necessary here]
*
* @param {String} $class - The name of the class to output. Will be suffixed with the number of the image and must be in quotes
* @param {Number} $num - The total number of images in the spritesheet
* @param {String} $path - The path to the spritesheet
*/
/**
 * SVG/PNG Fallback
 *
 * @param {String} $name
 * @param {String} $extension
 * @param {String} $color
 * @param {String} $position
 * @param {String} $repeat
 */
/*=================PLACEHOLDERS=================*/
/**
* Centres an element
*
* @author Byron V. Houwens
*
*/
/**
* Shortcut for the clearfix hack
*
* @author Unknown
*
*/
/**
* Lets an element fill the width of the screen
*
* @author Byron V. Houwens
*
*/
/**
* Very basic pseudo element starter-kit
*
* @author Unknown
*
*/
/**
* Specific styling for Siyavula buttons
*
* @author Byron V. Houwens
*
*/
/**
* Specific styling for Siyavula's navigation links
*
* @author Byron V. Houwens
*
*/
/**
* Shared property:values for Siyavula hamburger-related icons
*
* @author Byron V. Houwens
*
*/
/**
* Siyavula gradient
*
* @author Byron V. Houwens
*
*/
/**
 * Overrides Typography.scss in frontend-components for more spacing between
 * block-level elements.
 */
.sv-region-footer {
  display: block;
  position: relative;
  overflow: hidden;
  margin: 0 auto;
  padding: 2.4em 0;
  color: #585858;
  border-top: 1px solid #cdcdcd; }
  .sv-region-footer .sv-foo-button__icon-container {
    padding: .5em; }
  .sv-region-footer .sv-foo-button .icon {
    font-size: 1.125em; }
  .sv-region-footer .sv-foo-button--facebook .sv-foo-button__icon-container {
    background: #008bb2;
    border-color: transparent;
    border-bottom-color: #008bb2;
    color: #ffffff; }
  .sv-region-footer .sv-foo-button--facebook:focus .sv-foo-button__icon-container, .sv-region-footer .sv-foo-button--facebook:hover .sv-foo-button__icon-container {
    background: #4c70ba;
    border-bottom-color: #3b5998;
    color: #ffffff; }
  .sv-region-footer .sv-foo-button--twitter .sv-foo-button__icon-container {
    background: #008bb2;
    border-color: transparent;
    border-bottom-color: #008bb2;
    color: #ffffff; }
  .sv-region-footer .sv-foo-button--twitter:focus .sv-foo-button__icon-container, .sv-region-footer .sv-foo-button--twitter:hover .sv-foo-button__icon-container {
    background: #83c3f3;
    border-bottom-color: #55acee;
    color: #ffffff; }
  .sv-region-footer .footer-help {
    margin: 0 auto 0; }
    .sv-region-footer .footer-help .sv-list {
      margin-bottom: 0; }
  .sv-region-footer .footer-company {
    margin: 0 auto; }
  .sv-region-footer .footer-social {
    margin: 0 auto; }
    .sv-region-footer .footer-social p {
      margin-bottom: 0.375em; }
    .sv-region-footer .footer-social .sv-list-item {
      display: inline-block;
      vertical-align: top;
      padding-right: 1em; }
  .sv-region-footer .footer-legal {
    margin: 0 auto 1.5em;
    text-align: center; }
    .sv-region-footer .footer-legal p {
      font-size: 0.8125em;
      line-height: 1.5em; }
      .sv-region-footer .footer-legal p:last-child {
        margin-bottom: 0; }
    .sv-region-footer .footer-legal .icon-creative-commons-cc-by {
      font-size: 5em;
      margin-top: -.25em;
      margin-bottom: -.1em; }
  .sv-region-footer .footer-payment {
    margin: 0 auto 1.5em;
    text-align: center; }
    .sv-region-footer .footer-payment img {
      width: 100%;
      max-width: 22em;
      height: auto; }
  .sv-region-footer .footer-theme {
    margin: 0 auto 0;
    text-align: center; }
  @media (min-width: 29em) {
    .sv-region-footer {
      padding: 2.4em 0; }
      .sv-region-footer .footer-help .sv-list,
      .sv-region-footer .footer-company .sv-list,
      .sv-region-footer .footer-social .sv-list {
        margin: 0 auto 1.5em; }
      .sv-region-footer .sv-grid {
        display: -webkit-box;
        display: -webkit-flex;
        display: -ms-flexbox;
        display: flex;
        -webkit-box-orient: horizontal;
        -webkit-box-direction: normal;
        -webkit-flex-flow: row wrap;
            -ms-flex-flow: row wrap;
                flex-flow: row wrap; }
      .sv-region-footer .sv-cell--1 {
        -webkit-box-flex: 0;
        -webkit-flex: 0 0 50%;
            -ms-flex: 0 0 50%;
                flex: 0 0 50%; }
        .sv-region-footer .sv-cell--1 section {
          margin: 0 1em 0 0; }
      .sv-region-footer .sv-cell--2 {
        -webkit-box-flex: 0;
        -webkit-flex: 0 0 50%;
            -ms-flex: 0 0 50%;
                flex: 0 0 50%; }
        .sv-region-footer .sv-cell--2 section {
          margin: 0 0 0 1em; }
      .sv-region-footer .sv-cell--3 {
        -webkit-box-flex: 0;
        -webkit-flex: 0 0 100%;
            -ms-flex: 0 0 100%;
                flex: 0 0 100%; }
        .sv-region-footer .sv-cell--3 section {
          margin: 0; } }
  @media (min-width: 47em) {
    .sv-region-footer {
      padding: 2.4em 0; }
      .sv-region-footer .sv-grid {
        -webkit-box-orient: horizontal;
        -webkit-box-direction: normal;
        -webkit-flex-flow: row nowrap;
            -ms-flex-flow: row nowrap;
                flex-flow: row nowrap; }
      .sv-region-footer .sv-cell--1,
      .sv-region-footer .sv-cell--2,
      .sv-region-footer .sv-cell--3 {
        -webkit-box-flex: 0;
        -webkit-flex: 0 0 33.33333%;
            -ms-flex: 0 0 33.33333%;
                flex: 0 0 33.33333%; }
      .sv-region-footer .sv-cell--1 section {
        margin: 0 1em 0 0; }
      .sv-region-footer .sv-cell--2 section {
        margin: 0 .5em; }
      .sv-region-footer .sv-cell--3 section {
        margin: 0 0 0 1em; } }
  @media (min-width: 63em) {
    .sv-region-footer {
      padding: 3em 0; }
      .sv-region-footer .footer-social p {
        margin-bottom: 0.5em; }
      .sv-region-footer .footer-social .sv-list-item {
        padding-right: 1.5em; }
      .sv-region-footer .sv-cell--1 {
        -webkit-box-flex: 0;
        -webkit-flex: 0 0 25%;
            -ms-flex: 0 0 25%;
                flex: 0 0 25%; }
      .sv-region-footer .sv-cell--2 {
        -webkit-box-flex: 0;
        -webkit-flex: 0 0 25%;
            -ms-flex: 0 0 25%;
                flex: 0 0 25%; }
      .sv-region-footer .sv-cell--3 {
        -webkit-box-flex: 0;
        -webkit-flex: 0 0 50%;
            -ms-flex: 0 0 50%;
                flex: 0 0 50%;
        display: -webkit-box;
        display: -webkit-flex;
        display: -ms-flexbox;
        display: flex;
        -webkit-box-pack: end;
        -webkit-justify-content: flex-end;
            -ms-flex-pack: end;
                justify-content: flex-end; } }
